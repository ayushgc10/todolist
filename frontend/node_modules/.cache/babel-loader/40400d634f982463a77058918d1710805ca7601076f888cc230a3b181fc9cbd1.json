{"ast":null,"code":"var _jsxFileName = \"/Users/ayushgc/Desktop/todolist/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// Import React hooks for managing state and side effects\nimport React, { useState, useEffect } from 'react';\n\n// Import our TodoItem component\nimport TodoItem from './TodoItem';\n\n// Main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the list of todos\n  const [todos, setTodos] = useState([]);\n\n  // State to store the current input value\n  const [newTodo, setNewTodo] = useState('');\n\n  // State to track loading and error states\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // API base URL - this is where our backend server runs\n  const API_URL = 'http://localhost:3001/api';\n\n  // Function to fetch all todos from the server\n  const fetchTodos = async () => {\n    try {\n      setLoading(true); // Show loading state\n      const response = await fetch(`${API_URL}/todos`); // Make GET request to server\n      const data = await response.json(); // Convert response to JSON\n      setTodos(data); // Update todos state with fetched data\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('Failed to load todos'); // Set error message\n      console.error('Error fetching todos:', err);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Function to add a new todo\n  const addTodo = async text => {\n    try {\n      const response = await fetch(`${API_URL}/todos`, {\n        method: 'POST',\n        // HTTP method\n        headers: {\n          'Content-Type': 'application/json' // Tell server we're sending JSON\n        },\n        body: JSON.stringify({\n          text\n        }) // Send todo text as JSON\n      });\n      const newTodo = await response.json(); // Get the created todo from server\n      setTodos(prevTodos => [...prevTodos, newTodo]); // Add new todo to state\n      setNewTodo(''); // Clear the input field\n    } catch (err) {\n      setError('Failed to add todo'); // Set error message\n      console.error('Error adding todo:', err);\n    }\n  };\n\n  // Function to toggle todo completion status\n  const toggleTodo = async id => {\n    try {\n      const response = await fetch(`${API_URL}/todos/${id}`, {\n        method: 'PUT' // HTTP method for updating\n      });\n      const updatedTodo = await response.json(); // Get updated todo from server\n      setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? updatedTodo : todo // Replace the specific todo\n      ));\n    } catch (err) {\n      setError('Failed to update todo'); // Set error message\n      console.error('Error updating todo:', err);\n    }\n  };\n\n  // Function to delete a todo\n  const deleteTodo = async id => {\n    try {\n      await fetch(`${API_URL}/todos/${id}`, {\n        method: 'DELETE' // HTTP method for deleting\n      });\n      setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id) // Remove todo from state\n      );\n    } catch (err) {\n      setError('Failed to delete todo'); // Set error message\n      console.error('Error deleting todo:', err);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent page from refreshing\n    if (newTodo.trim()) {\n      // Only add if todo is not empty\n      addTodo(newTodo.trim()); // Add the new todo\n    }\n  };\n\n  // Load todos when component first mounts (runs once)\n  useEffect(() => {\n    fetchTodos();\n  }, []); // Empty array means this effect runs only once\n\n  // If loading, show loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading todos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main app render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"My Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keep track of your tasks!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTodos,\n        style: {\n          marginLeft: '10px',\n          padding: '5px 10px'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value) // Update input value\n        ,\n        placeholder: \"Add a new todo...\",\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"add-button\",\n        disabled: !newTodo.trim() // Disable button if input is empty\n        ,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        // React needs unique keys for list items\n        todo: todo,\n        onToggle: toggleTodo,\n        onDelete: deleteTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), todos.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        color: '#666',\n        marginTop: '20px'\n      },\n      children: \"No todos yet. Add one above!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the App component so it can be used in index.js\n_s(App, \"BPTkJ9pvgXBSFx2c4/e1LfCAsDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoItem","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","loading","setLoading","error","setError","API_URL","fetchTodos","response","fetch","data","json","err","console","addTodo","text","method","headers","body","JSON","stringify","prevTodos","toggleTodo","id","updatedTodo","map","todo","deleteTodo","filter","handleSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","padding","onSubmit","type","value","onChange","target","placeholder","disabled","onToggle","onDelete","length","textAlign","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/ayushgc/Desktop/todolist/frontend/src/App.js"],"sourcesContent":["// Import React hooks for managing state and side effects\nimport React, { useState, useEffect } from 'react';\n\n// Import our TodoItem component\nimport TodoItem from './TodoItem';\n\n// Main App component\nfunction App() {\n  // State to store the list of todos\n  const [todos, setTodos] = useState([]);\n  \n  // State to store the current input value\n  const [newTodo, setNewTodo] = useState('');\n  \n  // State to track loading and error states\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // API base URL - this is where our backend server runs\n  const API_URL = 'http://localhost:3001/api';\n\n  // Function to fetch all todos from the server\n  const fetchTodos = async () => {\n    try {\n      setLoading(true); // Show loading state\n      const response = await fetch(`${API_URL}/todos`); // Make GET request to server\n      const data = await response.json(); // Convert response to JSON\n      setTodos(data); // Update todos state with fetched data\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('Failed to load todos'); // Set error message\n      console.error('Error fetching todos:', err);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Function to add a new todo\n  const addTodo = async (text) => {\n    try {\n      const response = await fetch(`${API_URL}/todos`, {\n        method: 'POST', // HTTP method\n        headers: {\n          'Content-Type': 'application/json', // Tell server we're sending JSON\n        },\n        body: JSON.stringify({ text }), // Send todo text as JSON\n      });\n      \n      const newTodo = await response.json(); // Get the created todo from server\n      setTodos(prevTodos => [...prevTodos, newTodo]); // Add new todo to state\n      setNewTodo(''); // Clear the input field\n    } catch (err) {\n      setError('Failed to add todo'); // Set error message\n      console.error('Error adding todo:', err);\n    }\n  };\n\n  // Function to toggle todo completion status\n  const toggleTodo = async (id) => {\n    try {\n      const response = await fetch(`${API_URL}/todos/${id}`, {\n        method: 'PUT', // HTTP method for updating\n      });\n      \n      const updatedTodo = await response.json(); // Get updated todo from server\n      setTodos(prevTodos => \n        prevTodos.map(todo => \n          todo.id === id ? updatedTodo : todo // Replace the specific todo\n        )\n      );\n    } catch (err) {\n      setError('Failed to update todo'); // Set error message\n      console.error('Error updating todo:', err);\n    }\n  };\n\n  // Function to delete a todo\n  const deleteTodo = async (id) => {\n    try {\n      await fetch(`${API_URL}/todos/${id}`, {\n        method: 'DELETE', // HTTP method for deleting\n      });\n      \n      setTodos(prevTodos => \n        prevTodos.filter(todo => todo.id !== id) // Remove todo from state\n      );\n    } catch (err) {\n      setError('Failed to delete todo'); // Set error message\n      console.error('Error deleting todo:', err);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent page from refreshing\n    if (newTodo.trim()) { // Only add if todo is not empty\n      addTodo(newTodo.trim()); // Add the new todo\n    }\n  };\n\n  // Load todos when component first mounts (runs once)\n  useEffect(() => {\n    fetchTodos();\n  }, []); // Empty array means this effect runs only once\n\n  // If loading, show loading message\n  if (loading) {\n    return (\n      <div className=\"app-container\">\n        <div className=\"loading\">Loading todos...</div>\n      </div>\n    );\n  }\n\n  // Main app render\n  return (\n    <div className=\"app-container\">\n      {/* App header */}\n      <div className=\"app-header\">\n        <h1 className=\"app-title\">My Todo List</h1>\n        <p>Keep track of your tasks!</p>\n      </div>\n\n      {/* Error message display */}\n      {error && (\n        <div className=\"error\">\n          {error}\n          <button onClick={fetchTodos} style={{ marginLeft: '10px', padding: '5px 10px' }}>\n            Retry\n          </button>\n        </div>\n      )}\n\n      {/* Form to add new todos */}\n      <form onSubmit={handleSubmit} className=\"todo-form\">\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)} // Update input value\n          placeholder=\"Add a new todo...\"\n          className=\"todo-input\"\n        />\n        <button \n          type=\"submit\" \n          className=\"add-button\"\n          disabled={!newTodo.trim()} // Disable button if input is empty\n        >\n          Add Todo\n        </button>\n      </form>\n\n      {/* List of todos */}\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            key={todo.id} // React needs unique keys for list items\n            todo={todo}\n            onToggle={toggleTodo}\n            onDelete={deleteTodo}\n          />\n        ))}\n      </ul>\n\n      {/* Show message when no todos */}\n      {todos.length === 0 && !loading && (\n        <p style={{ textAlign: 'center', color: '#666', marginTop: '20px' }}>\n          No todos yet. Add one above!\n        </p>\n      )}\n    </div>\n  );\n}\n\n// Export the App component so it can be used in index.js\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}